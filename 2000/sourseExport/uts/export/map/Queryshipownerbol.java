package uts.export.map;

//------------------------------------------------------------------------
// This code was generated by IBM VisualAge for Java Data Access Builder.
// WARNING: Modifications to this code will be lost on next code generation.
//------------------------------------------------------------------------



import java.lang.*;
import java.math.*;
import java.util.*;
import java.beans.*;
import java.sql.*;
import com.ibm.ivj.eab.dab.*;
import java.io.Serializable;

//----------------------------------------------------------------
//
// Queryshipownerbol - persistent object class
//
//---------------------------------------------------------------- 

/**
  * This class is mapped to QUERYshipownerBOL.
  */

public class Queryshipownerbol extends PersistentObject implements Cloneable, Serializable
{

  private static DatastoreJDBC iQueryshipownerbolDatastore;

  private static String _qualifier = "";

 //----------------------------------------------------------------
 // Queryshipownerbol Attributes and methods
 //----------------------------------------------------------------

  /*--------------------------------------------------------------
	 Queryshipownerbol shipowner access methods
	 This attribute is mapped to SHIPOWNER.
	--------------------------------------------------------------*/
   private String iShipowner = null;

  boolean modified[] = { false };

  static DASQLGenerator generator = new DASQLGenerator("QUERYshipownerBOL",
													  null, 
													  new String[] {"SHIPOWNER"}, 
													  null, 
													  null );

 //----------------------------------------------------------------
 // Constructors
 //----------------------------------------------------------------
  public Queryshipownerbol() {
	super(null); 
  }  
  public Queryshipownerbol(DatastoreJDBC aDatastore) {
	super(aDatastore); 
  }  
 //----------------------------------------------------------------
 // Database access methods
 //----------------------------------------------------------------

  public void _executeAction( String _methodName, Object[] _params ) throws Exception { 

  }  
  protected POCompleteSupport _getPOCompleteSupport() { return _poSupport; }  
  protected static DatastoreJDBC _getStaticDatastore() {
	if (iQueryshipownerbolDatastore != null) return iQueryshipownerbolDatastore;
	else return DatastoreJDBC.getApplicationDatastore();
  }  
  protected void _setBusy(boolean flag) { super._setBusy(flag); }  
   void _setShipowner(String aShipowner) {
	 if (_sendingAttributeEvents) {
	   String temp = iShipowner; 
	   iShipowner = aShipowner; 
	   _changes.firePropertyChange("shipowner",  temp, aShipowner); 
	 } else {
	   iShipowner = aShipowner;
	 }
   }   
 //----------------------------------------------------------------
 // clone - returns a copy of the object
 //----------------------------------------------------------------
  public Object clone() {
 
	Queryshipownerbol obj = new Queryshipownerbol(getObjectsDatastore());

	obj.iShipowner = iShipowner; 

	return obj;
  }  
 //----------------------------------------------------------------
 // equals - compares itself with another object
 //----------------------------------------------------------------
  public boolean equals(Object anObject) {

	if ( !(anObject instanceof Queryshipownerbol) ) return false;
	Queryshipownerbol aQueryshipownerbol = (Queryshipownerbol)anObject;

	if ( iShipowner != aQueryshipownerbol.iShipowner ) {
	   if ( iShipowner == null || aQueryshipownerbol.iShipowner == null) return false;
	   else if ( !iShipowner.equals( aQueryshipownerbol.iShipowner ) ) return false;
	 } 

	return true;
  }  
  public Object[] getAttributes() {
	Object[] o = {getShipowner() };
	return (o);
  }  
  public String[] getAttributeStrings() {
	String[] s = {getShipowner() };
	return (s);
  }  
  public DatastoreJDBC getCurrentDatastore() {
	if (getObjectsDatastore() != null) return getObjectsDatastore();
	else if (getDefaultDatastore() != null) return getDefaultDatastore();
	else return DatastoreJDBC.getApplicationDatastore();
  }  
 //----------------------------------------------------------------
 // Default Datastore
 //----------------------------------------------------------------
  public static DatastoreJDBC getDefaultDatastore() { return iQueryshipownerbolDatastore; }  
  public static String getQualifier() { return _qualifier; }  
   public String getShipowner() { return iShipowner; }   
  public boolean hasDataId() { return false; }  
  public boolean isModified() {
	return super.isModified();
  }  
  public boolean isReadOnly() { return false; }  
   public boolean isShipownerNullable() { return true; }   
  void setAllModified() {
	for(int i=0; i < modified.length; i++) modified[i] = true;
  }  
  public static void setDefaultDatastore(DatastoreJDBC aDatastore) { iQueryshipownerbolDatastore = aDatastore; }  
  public void setModified(boolean enable) {
	if ( !enable ) { 
	  for(int i=0; i < modified.length; i++) modified[i] = false;
	}

	super.setModified(enable);
  }  
 //----------------------------------------------------------------
 // methods for setting the tablename dynamically
 //----------------------------------------------------------------
  public static void setQualifier(String qual) {
	if (qual == null) _qualifier = "";
	else if (qual.equals("")) _qualifier = qual;
	else if (!qual.endsWith(".")) _qualifier = qual + ".";
	else _qualifier = qual;
  }  
   public void setShipowner(String aShipowner) { 
	 String temp = iShipowner; 
	 modified[0] = true;
	 iShipowner = aShipowner; 
	 setModified(true);
	 _changes.firePropertyChange("shipowner",  temp, aShipowner); 
   }   
  public String toString() { return toString("."); }  
 //----------------------------------------------------------------
 // Display methods
 //----------------------------------------------------------------
  public String toString(String aSeparator)
  {
	return (getShipowner());
  }  
}